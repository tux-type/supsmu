name: Build, Upload, and Release Python Package


on:
  push:
    tags:
      - 'test-v*'

permissions:
  contents: read

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_ARCHS: auto64

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build-sdist:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
            persist-credentials: false

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build --sdist

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/

  test-pypi-publish:
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    permissions:
      id-token: write

    environment:
      name: testpypi
      url: https://test.pypi.org/p/supsmu

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist/
          merge-multiple: true

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/
          verbose: true

  github-release:
    name: Sign the distribution and upload to GitHub Release
    needs:
    - test-pypi-publish
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist/
        merge-multiple: true
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/*.tar.gz dist/*.tar.gz.sigstore.json
        --repo "$GITHUB_REPOSITORY"
